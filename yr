
import requests
from bs4 import BeautifulSoup
import time
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import datetime


def clear_log():            # defines function to clear data log document
    q = input('Are you SURE you want to clear all data logs?  (y/n)')
    if q == 'y' or q == 'Y':
        log = open('temp_log.txt', 'w')
        log.write('\n')
        log.close()
        print('.' + '\n')
        print('.' + '\n')
        time.sleep(2)
        print('All data logs are cleared...')
    else:
        print('Data logs unchanged...')


fig = plt.figure()
ax1 = fig.add_subplot(1, 1, 1)


#Get todays date for use in file name
now = datetime.datetime.now()
day = now.day
month = now.month
date = (day)
date = str(date)
print(date)

t = [0]
sleeptime = 300
temp_list = []
rain_list = []
wind_list = []
while True:
    try:
        # Get HTML from URL
        page = requests.get('https://www.yr.no/sted/Sverige/Stockholm/Dalar%C3%B6/')
        print('Status code:',page.status_code)
        if page.status_code == 200:
            print('Data fetch successful...')
        else:
            print('Data fetch staus unknown...')
        # Parse and prettify
        soup = BeautifulSoup(page.content, 'html.parser')
        soup.prettify()
        soup = soup.findAll('td')
        soup = str(soup)
        # Write data to file
        data = open('data_log','w')
        data.write(soup)
        data.close()
    #----------------------------------------------------
        data = open('data_log','r')
        n = 0
        for line in data:
            if 'Temperatur' in line and (n <= 0):
                data_str = line
                n+=1
        data_str = data_str.split(' ')
        #print(data_str)
    #----------------------------------------------------
                                    # Get temp as one or two digits
        temp = list(data_str[5])
        n = 0
        for i in temp:
            if i.isdigit():
                if n > 0:
                    temp = (temp + i)
                else:
                    temp = i
                n+=1
                                    # Gets plus or minus
        prefix = data_str[3]
        if 'plus' in prefix:
            temp = ('+' + temp)
        else:
            temp = ('-' + temp)
        print('Temperature: ', temp )
        temp = int(temp)
        temp_list.append(temp)
    #--------------------------------------------------Get rain
        rain = data_str[17:19]
        rain_lv = str(rain[0])
        rain_unit = str(rain[1])
        print('Expected Rain: ', rain_lv, rain_unit)
        rain_list.append(rain_lv)
    #-------------------------------------------------- Get Wind
        wind = data_str[29:33]
        wind_cat = wind[0].split('=')
        wind[0] = wind_cat[1]
        print('Current Wind: ', wind[0], wind[1], wind[2], wind[3])
        print('--------------------')
        windspeed = wind[2]
        wind_list.append(windspeed)
    #----------------------------------------------------

        #timesum = np.cumsum(t)
        #timesum.tolist()

        #----------------------------------------------------Make DataFrame
        full_list = [temp_list, rain_list, wind_list, t]
        full_list = {'temp': temp_list, 'Rain': rain_list, 'Wind': wind_list, 'Time': t}
        df = pd.DataFrame(full_list, columns=['temp', 'Rain', 'Wind', 'Time'])
        print(df)
        filename = ('full_log', datetime.datetime.now().strftime("%Y%m%d"))
        filename = str(filename)
        df.to_csv(filename, sep=' ')
    #----------------------------------------------------Plotting
        time.sleep(sleeptime)
        t.append(datetime.datetime.now().strftime('%H%M'))

    except KeyboardInterrupt:
        print('End of Data Collection...')



